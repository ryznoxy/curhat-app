// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id Int @id @default(autoincrement())

  uuid        String        @unique @default(cuid())
  name        String
  email       String
  pfp         String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Post        Post[]
  Comment     Comment[]
  LikeHistory LikeHistory[]

  @@unique([email, uuid])
}

model Post {
  id Int @id @default(autoincrement())

  uuid      String   @unique @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likes Int @default(0)

  user User @relation(fields: [userId], references: [uuid])

  userId String

  comments    Comment[]
  LikeHistory LikeHistory[]
}

model Comment {
  id Int @id @default(autoincrement())

  uuid      String   @unique @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  likes Int @default(0)

  user   User   @relation(fields: [userId], references: [uuid])
  userId String

  post        Post          @relation(fields: [postId], references: [uuid], onDelete: Cascade)
  postId      String
  LikeHistory LikeHistory[]
}

model LikeHistory {
  id Int @id @default(autoincrement())

  user   User   @relation(fields: [userId], references: [uuid])
  userId String

  post   Post?   @relation(fields: [postId], references: [uuid], onDelete: Cascade)
  postId String?

  comment   Comment? @relation(fields: [commentId], references: [uuid], onDelete: Cascade)
  commentId String?

  createdAt DateTime @default(now())

  @@unique([userId, postId], name: "LikeHistory_userId_postId_key")
  @@unique([userId, commentId], name: "LikeHistory_userId_commentId_key")
}
